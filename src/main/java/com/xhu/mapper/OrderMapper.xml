<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhu.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.xhu.po.Order">
    <id column="order_id" jdbcType="CHAR" property="orderId" />
    <result column="pay_id" jdbcType="CHAR" property="payId" />
    <result column="studio_card_id" jdbcType="CHAR" property="studioCardId" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="order_name" jdbcType="VARCHAR" property="orderName" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="order_paid" jdbcType="TIMESTAMP" property="orderPaid" />
    <result column="order_pay_state" jdbcType="INTEGER" property="orderPayState" />
    <result column="order_limit_time" jdbcType="TIMESTAMP" property="orderLimitTime" />
    <result column="order_get_ticket_code" jdbcType="NUMERIC" property="orderGetTicketCode" />
    <result column="order_ticket_state" jdbcType="BIT" property="orderTicketState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, pay_id, studio_card_id, user_id, order_name, order_time, order_paid, order_pay_state, 
    order_limit_time, order_get_ticket_code, order_ticket_state
  </sql>
  <select id="selectByExample" parameterType="com.xhu.po.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where order_id = #{orderId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order
    where order_id = #{orderId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhu.po.OrderExample">
    delete from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xhu.po.Order">
    insert into order (order_id, pay_id, studio_card_id, 
      user_id, order_name, order_time, 
      order_paid, order_pay_state, order_limit_time, 
      order_get_ticket_code, order_ticket_state)
    values (#{orderId,jdbcType=CHAR}, #{payId,jdbcType=CHAR}, #{studioCardId,jdbcType=CHAR}, 
      #{userId,jdbcType=CHAR}, #{orderName,jdbcType=VARCHAR}, #{orderTime,jdbcType=TIMESTAMP}, 
      #{orderPaid,jdbcType=TIMESTAMP}, #{orderPayState,jdbcType=INTEGER}, #{orderLimitTime,jdbcType=TIMESTAMP}, 
      #{orderGetTicketCode,jdbcType=NUMERIC}, #{orderTicketState,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.xhu.po.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="payId != null">
        pay_id,
      </if>
      <if test="studioCardId != null">
        studio_card_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderName != null">
        order_name,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="orderPaid != null">
        order_paid,
      </if>
      <if test="orderPayState != null">
        order_pay_state,
      </if>
      <if test="orderLimitTime != null">
        order_limit_time,
      </if>
      <if test="orderGetTicketCode != null">
        order_get_ticket_code,
      </if>
      <if test="orderTicketState != null">
        order_ticket_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=CHAR},
      </if>
      <if test="payId != null">
        #{payId,jdbcType=CHAR},
      </if>
      <if test="studioCardId != null">
        #{studioCardId,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="orderName != null">
        #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPaid != null">
        #{orderPaid,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPayState != null">
        #{orderPayState,jdbcType=INTEGER},
      </if>
      <if test="orderLimitTime != null">
        #{orderLimitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderGetTicketCode != null">
        #{orderGetTicketCode,jdbcType=NUMERIC},
      </if>
      <if test="orderTicketState != null">
        #{orderTicketState,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xhu.po.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=CHAR},
      </if>
      <if test="record.payId != null">
        pay_id = #{record.payId,jdbcType=CHAR},
      </if>
      <if test="record.studioCardId != null">
        studio_card_id = #{record.studioCardId,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.orderName != null">
        order_name = #{record.orderName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderPaid != null">
        order_paid = #{record.orderPaid,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderPayState != null">
        order_pay_state = #{record.orderPayState,jdbcType=INTEGER},
      </if>
      <if test="record.orderLimitTime != null">
        order_limit_time = #{record.orderLimitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderGetTicketCode != null">
        order_get_ticket_code = #{record.orderGetTicketCode,jdbcType=NUMERIC},
      </if>
      <if test="record.orderTicketState != null">
        order_ticket_state = #{record.orderTicketState,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order
    set order_id = #{record.orderId,jdbcType=CHAR},
      pay_id = #{record.payId,jdbcType=CHAR},
      studio_card_id = #{record.studioCardId,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=CHAR},
      order_name = #{record.orderName,jdbcType=VARCHAR},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      order_paid = #{record.orderPaid,jdbcType=TIMESTAMP},
      order_pay_state = #{record.orderPayState,jdbcType=INTEGER},
      order_limit_time = #{record.orderLimitTime,jdbcType=TIMESTAMP},
      order_get_ticket_code = #{record.orderGetTicketCode,jdbcType=NUMERIC},
      order_ticket_state = #{record.orderTicketState,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xhu.po.Order">
    update order
    <set>
      <if test="payId != null">
        pay_id = #{payId,jdbcType=CHAR},
      </if>
      <if test="studioCardId != null">
        studio_card_id = #{studioCardId,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="orderName != null">
        order_name = #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPaid != null">
        order_paid = #{orderPaid,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPayState != null">
        order_pay_state = #{orderPayState,jdbcType=INTEGER},
      </if>
      <if test="orderLimitTime != null">
        order_limit_time = #{orderLimitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderGetTicketCode != null">
        order_get_ticket_code = #{orderGetTicketCode,jdbcType=NUMERIC},
      </if>
      <if test="orderTicketState != null">
        order_ticket_state = #{orderTicketState,jdbcType=BIT},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xhu.po.Order">
    update order
    set pay_id = #{payId,jdbcType=CHAR},
      studio_card_id = #{studioCardId,jdbcType=CHAR},
      user_id = #{userId,jdbcType=CHAR},
      order_name = #{orderName,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      order_paid = #{orderPaid,jdbcType=TIMESTAMP},
      order_pay_state = #{orderPayState,jdbcType=INTEGER},
      order_limit_time = #{orderLimitTime,jdbcType=TIMESTAMP},
      order_get_ticket_code = #{orderGetTicketCode,jdbcType=NUMERIC},
      order_ticket_state = #{orderTicketState,jdbcType=BIT}
    where order_id = #{orderId,jdbcType=CHAR}
  </update>
</mapper>