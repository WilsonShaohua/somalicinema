<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhu.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.xhu.po.Order">
    <id column="order_id" jdbcType="CHAR" property="orderId" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="order_pay_time" jdbcType="TIMESTAMP" property="orderPayTime" />
    <result column="order_limit_time" jdbcType="TIMESTAMP" property="orderLimitTime" />
    <result column="order_money" jdbcType="DECIMAL" property="orderMoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, order_time, order_pay_time, order_limit_time, order_money
  </sql>
  <select id="selectByExample" parameterType="com.xhu.po.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from [order]
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from [order]
    where order_id = #{orderId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete
    from [order]
    where order_id = #{orderId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhu.po.OrderExample">
    delete from [order]
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xhu.po.Order">
    intsert into [order] (order_id, order_time, order_pay_time, 
      order_limit_time, order_money)
    values (#{orderId,jdbcType=CHAR}, #{orderTime,jdbcType=TIMESTAMP}, #{orderPayTime,jdbcType=TIMESTAMP}, 
      #{orderLimitTime,jdbcType=TIMESTAMP}, #{orderMoney,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.xhu.po.Order">
    intsert into [order]
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="orderPayTime != null">
        order_pay_time,
      </if>
      <if test="orderLimitTime != null">
        order_limit_time,
      </if>
      <if test="orderMoney != null">
        order_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=CHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPayTime != null">
        #{orderPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderLimitTime != null">
        #{orderLimitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderMoney != null">
        #{orderMoney,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xhu.po.OrderExample" resultType="java.lang.Long">
    select count(*) from [order]
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update [order]
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=CHAR},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderPayTime != null">
        order_pay_time = #{record.orderPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderLimitTime != null">
        order_limit_time = #{record.orderLimitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderMoney != null">
        order_money = #{record.orderMoney,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update [order]
    set order_id = #{record.orderId,jdbcType=CHAR},
      order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      order_pay_time = #{record.orderPayTime,jdbcType=TIMESTAMP},
      order_limit_time = #{record.orderLimitTime,jdbcType=TIMESTAMP},
      order_money = #{record.orderMoney,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xhu.po.Order">
    update [order]
    <set>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPayTime != null">
        order_pay_time = #{orderPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderLimitTime != null">
        order_limit_time = #{orderLimitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderMoney != null">
        order_money = #{orderMoney,jdbcType=DECIMAL},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xhu.po.Order">
    update [order]
    set order_time = #{orderTime,jdbcType=TIMESTAMP},
      order_pay_time = #{orderPayTime,jdbcType=TIMESTAMP},
      order_limit_time = #{orderLimitTime,jdbcType=TIMESTAMP},
      order_money = #{orderMoney,jdbcType=DECIMAL}
    where order_id = #{orderId,jdbcType=CHAR}
  </update>
</mapper>