<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhu.mapper.WatchedMapper">
  <resultMap id="BaseResultMap" type="com.xhu.po.Watched">
    <id column="watched_id" jdbcType="CHAR" property="watchedId" />
    <result column="movie_id" jdbcType="CHAR" property="movieId" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="ticket_id" jdbcType="CHAR" property="ticketId" />
    <result column="movie_score" jdbcType="DOUBLE" property="movieScore" />
    <result column="movie_evalution" jdbcType="VARCHAR" property="movieEvalution" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    watched_id, movie_id, user_id, ticket_id, movie_score, movie_evalution
  </sql>
  <select id="selectByExample" parameterType="com.xhu.po.WatchedExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from watched
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from watched
    where watched_id = #{watchedId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from watched
    where watched_id = #{watchedId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhu.po.WatchedExample">
    delete from watched
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xhu.po.Watched">
    insert into watched (watched_id, movie_id, user_id, 
      ticket_id, movie_score, movie_evalution
      )
    values (#{watchedId,jdbcType=CHAR}, #{movieId,jdbcType=CHAR}, #{userId,jdbcType=CHAR}, 
      #{ticketId,jdbcType=CHAR}, #{movieScore,jdbcType=DOUBLE}, #{movieEvalution,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xhu.po.Watched">
    insert into watched
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="watchedId != null">
        watched_id,
      </if>
      <if test="movieId != null">
        movie_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="ticketId != null">
        ticket_id,
      </if>
      <if test="movieScore != null">
        movie_score,
      </if>
      <if test="movieEvalution != null">
        movie_evalution,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="watchedId != null">
        #{watchedId,jdbcType=CHAR},
      </if>
      <if test="movieId != null">
        #{movieId,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="ticketId != null">
        #{ticketId,jdbcType=CHAR},
      </if>
      <if test="movieScore != null">
        #{movieScore,jdbcType=DOUBLE},
      </if>
      <if test="movieEvalution != null">
        #{movieEvalution,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xhu.po.WatchedExample" resultType="java.lang.Long">
    select count(*) from watched
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update watched
    <set>
      <if test="record.watchedId != null">
        watched_id = #{record.watchedId,jdbcType=CHAR},
      </if>
      <if test="record.movieId != null">
        movie_id = #{record.movieId,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.ticketId != null">
        ticket_id = #{record.ticketId,jdbcType=CHAR},
      </if>
      <if test="record.movieScore != null">
        movie_score = #{record.movieScore,jdbcType=DOUBLE},
      </if>
      <if test="record.movieEvalution != null">
        movie_evalution = #{record.movieEvalution,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update watched
    set watched_id = #{record.watchedId,jdbcType=CHAR},
      movie_id = #{record.movieId,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=CHAR},
      ticket_id = #{record.ticketId,jdbcType=CHAR},
      movie_score = #{record.movieScore,jdbcType=DOUBLE},
      movie_evalution = #{record.movieEvalution,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xhu.po.Watched">
    update watched
    <set>
      <if test="movieId != null">
        movie_id = #{movieId,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="ticketId != null">
        ticket_id = #{ticketId,jdbcType=CHAR},
      </if>
      <if test="movieScore != null">
        movie_score = #{movieScore,jdbcType=DOUBLE},
      </if>
      <if test="movieEvalution != null">
        movie_evalution = #{movieEvalution,jdbcType=VARCHAR},
      </if>
    </set>
    where watched_id = #{watchedId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xhu.po.Watched">
    update watched
    set movie_id = #{movieId,jdbcType=CHAR},
      user_id = #{userId,jdbcType=CHAR},
      ticket_id = #{ticketId,jdbcType=CHAR},
      movie_score = #{movieScore,jdbcType=DOUBLE},
      movie_evalution = #{movieEvalution,jdbcType=VARCHAR}
    where watched_id = #{watchedId,jdbcType=CHAR}
  </update>
</mapper>