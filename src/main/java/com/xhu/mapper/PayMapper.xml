<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhu.mapper.PayMapper">
  <resultMap id="BaseResultMap" type="com.xhu.po.Pay">
    <id column="pay_id" jdbcType="CHAR" property="payId" />
    <result column="pay_account_id" jdbcType="CHAR" property="payAccountId" />
    <result column="order_id" jdbcType="CHAR" property="orderId" />
    <result column="pay_money_number" jdbcType="DECIMAL" property="payMoneyNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pay_id, pay_account_id, order_id, pay_money_number
  </sql>
  <select id="selectByExample" parameterType="com.xhu.po.PayExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pay
    where pay_id = #{payId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from pay
    where pay_id = #{payId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhu.po.PayExample">
    delete from pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xhu.po.Pay">
    insert into pay (pay_id, pay_account_id, order_id, 
      pay_money_number)
    values (#{payId,jdbcType=CHAR}, #{payAccountId,jdbcType=CHAR}, #{orderId,jdbcType=CHAR}, 
      #{payMoneyNumber,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.xhu.po.Pay">
    insert into pay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payId != null">
        pay_id,
      </if>
      <if test="payAccountId != null">
        pay_account_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="payMoneyNumber != null">
        pay_money_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payId != null">
        #{payId,jdbcType=CHAR},
      </if>
      <if test="payAccountId != null">
        #{payAccountId,jdbcType=CHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=CHAR},
      </if>
      <if test="payMoneyNumber != null">
        #{payMoneyNumber,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xhu.po.PayExample" resultType="java.lang.Long">
    select count(*) from pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay
    <set>
      <if test="record.payId != null">
        pay_id = #{record.payId,jdbcType=CHAR},
      </if>
      <if test="record.payAccountId != null">
        pay_account_id = #{record.payAccountId,jdbcType=CHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=CHAR},
      </if>
      <if test="record.payMoneyNumber != null">
        pay_money_number = #{record.payMoneyNumber,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay
    set pay_id = #{record.payId,jdbcType=CHAR},
      pay_account_id = #{record.payAccountId,jdbcType=CHAR},
      order_id = #{record.orderId,jdbcType=CHAR},
      pay_money_number = #{record.payMoneyNumber,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xhu.po.Pay">
    update pay
    <set>
      <if test="payAccountId != null">
        pay_account_id = #{payAccountId,jdbcType=CHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=CHAR},
      </if>
      <if test="payMoneyNumber != null">
        pay_money_number = #{payMoneyNumber,jdbcType=DECIMAL},
      </if>
    </set>
    where pay_id = #{payId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xhu.po.Pay">
    update pay
    set pay_account_id = #{payAccountId,jdbcType=CHAR},
      order_id = #{orderId,jdbcType=CHAR},
      pay_money_number = #{payMoneyNumber,jdbcType=DECIMAL}
    where pay_id = #{payId,jdbcType=CHAR}
  </update>
</mapper>