<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhu.mapper.ActorMapper">
  <resultMap id="BaseResultMap" type="com.xhu.po.Actor">
    <id column="actor_id" jdbcType="CHAR" property="actorId" />
    <result column="city_id" jdbcType="CHAR" property="cityId" />
    <result column="actor_introduction" jdbcType="VARCHAR" property="actorIntroduction" />
    <result column="actor_name" jdbcType="VARCHAR" property="actorName" />
    <result column="actor_sex" jdbcType="BIT" property="actorSex" />
    <result column="actor_birthday" jdbcType="TIMESTAMP" property="actorBirthday" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    actor_id, city_id, actor_introduction, actor_name, actor_sex, actor_birthday
  </sql>
  <select id="selectByExample" parameterType="com.xhu.po.ActorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from actor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from actor
    where actor_id = #{actorId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from actor
    where actor_id = #{actorId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhu.po.ActorExample">
    delete from actor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xhu.po.Actor">
    insert into actor (actor_id, city_id, actor_introduction, 
      actor_name, actor_sex, actor_birthday
      )
    values (#{actorId,jdbcType=CHAR}, #{cityId,jdbcType=CHAR}, #{actorIntroduction,jdbcType=VARCHAR}, 
      #{actorName,jdbcType=VARCHAR}, #{actorSex,jdbcType=BIT}, #{actorBirthday,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xhu.po.Actor">
    insert into actor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="actorId != null">
        actor_id,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="actorIntroduction != null">
        actor_introduction,
      </if>
      <if test="actorName != null">
        actor_name,
      </if>
      <if test="actorSex != null">
        actor_sex,
      </if>
      <if test="actorBirthday != null">
        actor_birthday,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="actorId != null">
        #{actorId,jdbcType=CHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=CHAR},
      </if>
      <if test="actorIntroduction != null">
        #{actorIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="actorName != null">
        #{actorName,jdbcType=VARCHAR},
      </if>
      <if test="actorSex != null">
        #{actorSex,jdbcType=BIT},
      </if>
      <if test="actorBirthday != null">
        #{actorBirthday,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xhu.po.ActorExample" resultType="java.lang.Long">
    select count(*) from actor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update actor
    <set>
      <if test="record.actorId != null">
        actor_id = #{record.actorId,jdbcType=CHAR},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=CHAR},
      </if>
      <if test="record.actorIntroduction != null">
        actor_introduction = #{record.actorIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="record.actorName != null">
        actor_name = #{record.actorName,jdbcType=VARCHAR},
      </if>
      <if test="record.actorSex != null">
        actor_sex = #{record.actorSex,jdbcType=BIT},
      </if>
      <if test="record.actorBirthday != null">
        actor_birthday = #{record.actorBirthday,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update actor
    set actor_id = #{record.actorId,jdbcType=CHAR},
      city_id = #{record.cityId,jdbcType=CHAR},
      actor_introduction = #{record.actorIntroduction,jdbcType=VARCHAR},
      actor_name = #{record.actorName,jdbcType=VARCHAR},
      actor_sex = #{record.actorSex,jdbcType=BIT},
      actor_birthday = #{record.actorBirthday,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xhu.po.Actor">
    update actor
    <set>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=CHAR},
      </if>
      <if test="actorIntroduction != null">
        actor_introduction = #{actorIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="actorName != null">
        actor_name = #{actorName,jdbcType=VARCHAR},
      </if>
      <if test="actorSex != null">
        actor_sex = #{actorSex,jdbcType=BIT},
      </if>
      <if test="actorBirthday != null">
        actor_birthday = #{actorBirthday,jdbcType=TIMESTAMP},
      </if>
    </set>
    where actor_id = #{actorId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xhu.po.Actor">
    update actor
    set city_id = #{cityId,jdbcType=CHAR},
      actor_introduction = #{actorIntroduction,jdbcType=VARCHAR},
      actor_name = #{actorName,jdbcType=VARCHAR},
      actor_sex = #{actorSex,jdbcType=BIT},
      actor_birthday = #{actorBirthday,jdbcType=TIMESTAMP}
    where actor_id = #{actorId,jdbcType=CHAR}
  </update>
</mapper>